// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Usuario{
  id           Int            @id @default(autoincrement())
  nome         String         @db.VarChar(45)   
  email        String         @unique @db.VarChar(45)
  senha        String         @db.VarChar(60)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deleted      Boolean        @default(false)
  dispositivos Dispositivo[]
  log          Usuario_log[]


  @@map("usuarios")
}
model Tokens{
  id           Int            @id @default(autoincrement())
  codigo       String         @db.VarChar(6)
  createdAt    DateTime       @default(now())
  email        String         @db.VarChar(20)
  deleted      Boolean        @default(false)

}

model Dispositivo{
  id               Int         @id @default(autoincrement())
  modelo           String      @db.VarChar(45)
  numero_de_serie  String      @db.VarChar(45)
  activade         Boolean        @default(false)
  data_fabricacao  DateTime
  usuario          Usuario?    @relation(fields: [usuarioId], references: [id])
  usuarioId        Int?
  bateria          Int                @default(0)
  status           Dispositivo_status @default(Desligado)
  config           Dispositivo_config[]
  alertas          Alerta[]
  localizacoes     Localizacao[]
  logs             Dispositivo_log[]

  @@map("dispositivos")
}

model Dispositivo_config{
  id              Int            @id @default(autoincrement())
  intervalo_envio Int
  standby         Boolean
  dispositivo     Dispositivo @relation(fields: [dispositivoId], references: [id])
  dispositivoId   Int


  @@map("dispositivo_config")
}

model Alerta{
  id             Int            @id @default(autoincrement())
  descricao      String         @db.VarChar(45)
  ativo          Boolean
  dispositivo    Dispositivo    @relation(fields: [dispositivoId], references: [id])
  dispositivoId  Int
  alerta         Alerta_tipo        @relation(fields: [alertaId], references: [id])
  alertaId       Int
  
  @@map("alertas")
}

model Alerta_tipo{
  id            Int            @id @default(autoincrement())
  nome          String         @db.VarChar(45)
  regra         String         @db.VarChar(45)
  alerta        Alerta[]

  @@map("alertas_tipo")
}

model Localizacao{
  id            Int            @id @default(autoincrement())
  longitude     Decimal
  latitude      Decimal
  data_hora     DateTime
  dispositivo   Dispositivo   @relation(fields: [dispositivoId], references: [id])
  dispositivoId Int

  @@map("localizacoes")  
}

model Dispositivo_log{
id              Int            @id @default(autoincrement())
data_hora       DateTime
status_bateria  String         @db.VarChar(10)
descricao       String?        @db.VarChar(45)
banda_dados     String         @db.VarChar(45)
dispositivo     Dispositivo    @relation(fields: [dispositivoId], references: [id])
dispositivoId   Int

@@map("dispositivo_log")

}

model Usuario_log{
  id           Int            @id @default(autoincrement())
  descricao    String         @db.VarChar(45)
  data_hora    DateTime
  usuario      Usuario       @relation(fields: [usuarioId], references: [id])
  usuarioId    Int

  @@map("usuario_log")

}
enum Dispositivo_status {
  Em_movimento
  Parado
  Ligado
  Desligado
  Standby
}
